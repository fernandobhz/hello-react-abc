{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["HoraAtual","Date","toISOString","Geladeira","useState","porta","setPorta","onClick","Error","App","border","cellSpacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAIA,SAASA,IACP,OACE,+BACG,IAAIC,MAAOC,gBAKlB,IAAMC,EAAY,WAChB,MAA0BC,mBAAS,WAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,gCACE,sDAAsBD,KACtB,wBAAQE,QATQ,kBAAMD,EAAS,YAS/B,4BACA,wBAAQC,QATO,kBAAMD,EAAS,WAS9B,2BACA,wBAAQC,QATO,WACjB,MAAM,IAAIC,MAAJ,QAQJ,6BA6CSC,MAvCf,WACE,OACE,gCACE,wBAAOC,OAAO,IAAIC,YAAY,KAA9B,UACE,kCACE,sCACA,0CAEF,kCACE,+BACE,0CACA,uCAEF,+BACE,qCACA,6CAIN,gDACA,+CACA,cAACX,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,uBACA,uBACA,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCtDSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d61169a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\n\nfunction HoraAtual() {\n  return (\n    <div>\n      {new Date().toISOString()}\n    </div>\n  )\n}\n\nconst Geladeira = () => {\n  const [porta, setPorta] = useState('fechada');\n\n  const fecharPorta = () => setPorta(`fechada`);\n  const abrirPorta = () => setPorta(`aberta`);\n  const emitirErro = () => {\n    throw new Error(`abc`);\n  }\n  \n  return (\n    <div>\n      <div>A geldeira está {porta}</div>\n      <button onClick={fecharPorta}>Fechar a porta</button>\n      <button onClick={abrirPorta}>Abrir a porta</button>\n      <button onClick={emitirErro}>Emitir Erro</button>\n    </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div>\n      <table border=\"1\" cellSpacing=\"10\">\n        <thead>\n          <th>Nome</th>\n          <th>Idade</th>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Fernando</td>\n            <td>35</td>\n          </tr>\n          <tr>\n            <td>Ian</td>\n            <td>30</td>\n          </tr>\n        </tbody>\n      </table>\n      <div>Olá mundo.</div>\n      <div>Ola tudo bem</div>\n      <HoraAtual />\n      <HoraAtual />\n      <HoraAtual />\n      <HoraAtual />\n      <HoraAtual />\n      <br />\n      <br />\n      <br />\n      <Geladeira />\n      <Geladeira />\n      <Geladeira />\n      <Geladeira />\n      <Geladeira />\n      <Geladeira />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}